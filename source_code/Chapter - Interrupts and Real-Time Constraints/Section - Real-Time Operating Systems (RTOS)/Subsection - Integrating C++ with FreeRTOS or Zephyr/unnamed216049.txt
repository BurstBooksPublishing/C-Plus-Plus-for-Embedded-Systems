class MyTask {
public:
    MyTask() {
        k_thread_create(&thread, stack, K_THREAD_STACK_SIZEOF(stack),
                        [](void* p1, void* p2, void* p3) { static_cast(p1)->run(); },
                        this, nullptr, nullptr, K_PRIO_COOP(7), 0, K_NO_WAIT);
    }

    ~MyTask() {
        k_thread_abort(&thread);
    }

private:
    void run() {
        while (true) {
            // Task logic here
            k_sleep(K_MSEC(100));
        }
    }

    k_thread thread;
    K_THREAD_STACK_DEFINE(stack, 512);
};